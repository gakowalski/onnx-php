<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: onnx.proto3

namespace Onnx;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>onnx.TensorAnnotation</code>
 */
class TensorAnnotation extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string tensor_name = 1;</code>
     */
    protected $tensor_name = '';
    /**
     * <key, value> pairs to annotate tensor specified by <tensor_name> above.
     * The keys used in the mapping below must be pre-defined in ONNX spec.
     * For example, for 8-bit linear quantization case, 'SCALE_TENSOR', 'ZERO_POINT_TENSOR' will be pre-defined as
     * quantization parameter keys.
     *
     * Generated from protobuf field <code>repeated .onnx.StringStringEntryProto quant_parameter_tensor_names = 2;</code>
     */
    private $quant_parameter_tensor_names;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $tensor_name
     *     @type array<\Onnx\StringStringEntryProto>|\Google\Protobuf\Internal\RepeatedField $quant_parameter_tensor_names
     *           <key, value> pairs to annotate tensor specified by <tensor_name> above.
     *           The keys used in the mapping below must be pre-defined in ONNX spec.
     *           For example, for 8-bit linear quantization case, 'SCALE_TENSOR', 'ZERO_POINT_TENSOR' will be pre-defined as
     *           quantization parameter keys.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Onnx::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string tensor_name = 1;</code>
     * @return string
     */
    public function getTensorName()
    {
        return $this->tensor_name;
    }

    /**
     * Generated from protobuf field <code>string tensor_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTensorName($var)
    {
        GPBUtil::checkString($var, True);
        $this->tensor_name = $var;

        return $this;
    }

    /**
     * <key, value> pairs to annotate tensor specified by <tensor_name> above.
     * The keys used in the mapping below must be pre-defined in ONNX spec.
     * For example, for 8-bit linear quantization case, 'SCALE_TENSOR', 'ZERO_POINT_TENSOR' will be pre-defined as
     * quantization parameter keys.
     *
     * Generated from protobuf field <code>repeated .onnx.StringStringEntryProto quant_parameter_tensor_names = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getQuantParameterTensorNames()
    {
        return $this->quant_parameter_tensor_names;
    }

    /**
     * <key, value> pairs to annotate tensor specified by <tensor_name> above.
     * The keys used in the mapping below must be pre-defined in ONNX spec.
     * For example, for 8-bit linear quantization case, 'SCALE_TENSOR', 'ZERO_POINT_TENSOR' will be pre-defined as
     * quantization parameter keys.
     *
     * Generated from protobuf field <code>repeated .onnx.StringStringEntryProto quant_parameter_tensor_names = 2;</code>
     * @param array<\Onnx\StringStringEntryProto>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setQuantParameterTensorNames($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Onnx\StringStringEntryProto::class);
        $this->quant_parameter_tensor_names = $arr;

        return $this;
    }

}

